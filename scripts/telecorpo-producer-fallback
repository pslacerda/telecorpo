#!/usr/bin/python3

import glob
# import ipaddress
import socket
import textwrap
import threading
import tkinter as tk

from tkinter import ttk, messagebox
from gi.repository import Gst, GstRtspServer, GObject


Gst.init(None)
GObject.threads_init()


def test_source(elem):
    pipe = Gst.parse_launch('{} ! fakesink'.format(elem))
    pipe.set_state(Gst.State.PLAYING)
    ok = True
    if Gst.StateChangeReturn.FAILURE == pipe.get_state(0)[0]:
        ok = False
    pipe.set_state(Gst.State.NULL)
    return ok


def probe_sources():
    sources = {'smpte': "videotestsrc do-timestamp=true is-live=true"}

    if test_source('dv1394src'):
        sources['dv1394'] = "dv1394src do-timestamp=true ! dvdemux ! dvdec"

    for dev in glob.glob('/dev/video*'):
        elem = 'v4l2src do-timestamp=true device={}'.format(dev)
        name = dev[5:]
        if test_source(elem):
            sources[name] = elem
    return sources


    

sources = probe_sources()
source_names = list(sources)

print('Fontes de vídeo disponíveis:')
for i, source in enumerate(source_names):
    print('  {}. {}'.format(i, source))

selected = int(input('Entre com o número da fonte desejada\n> ').strip())
source = sources[source_names[selected]]

print()
server = input('Entre com o endereço do roteador\n> ').strip()

launch = ("{} ! queue ! videoconvert ! videoscale ! videorate"
          " ! video/x-raw,format=I420 ! queue"
          " ! x264enc speed-preset=ultrafast tune=zerolatency"
          " ! queue ! rtph264pay ! udpsink host={} port=13375"
          "".format(source, server))

pipeline = Gst.parse_launch(launch)
pipeline.set_state(Gst.State.PLAYING)

print('\nEnviando vídeo...')
GObject.MainLoop().run()

